import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { createMachine } from "xstate";
import { useMachine } from "@xstate/react";

const inter = Inter({ subsets: ["latin"] });

type Todo = {
  id: number;
  title: string;
};

type Context = {
  todos: Todo[];
  errorMessage: string;
};

const fetchMachine = createMachine<Context>({
  context: {
    todos: [],
    errorMessage: "",
  },
  /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAMzABccBtABgF1FQAHAe1lwNcvfFxAAPRAEYAzADYSAVimK5AFgAcc1ho0B2PWoA0IAJ7SNAJiWtbrAJxq5e+xsW6Avh5NoseQqQUvOgQBFB0jDgA+rAArpiYcLBsnEggfAJCImKSCGpqMiQaMor2ZbqaJfIm5ghSehokeop2DYYqzZZePhg4BMQkQSFhEUzYUWCo3AymKWIZgsKiabn5hcWl5RqVitVm0pasJJYtrPUa9azqMvbdIL59AYPBofjh9GMTAE5fvF9zaQWWWWoFysgUylUmm0ugMxn2CAuNlslnsVRc9ncdwe-gGYB+f2oXzAHxYHHm-EW2RW0nkShU6i0On0hhqtOsdjOjikOnslj0XTu+F4EDgYhx-SIFMySxyiAAtHI2QhFdjerjSOQqNKqSCJIhNCQzlD5KxDsb7MqpMUjXZ+TJtqxFAZBT0-JLnsM3jrgXKEPz7E09DI1M1FKGpNolQipLHkbZ7HJnZi1JYNGr3U84gkkj7ZTSEHI40WBYZLHITs6rS5jqdWG01B1FIoM488VMZnnqaDEEWpCQS-zUxXm3orYcmqdzpdrrdvPd1R78b8vl29atLMr9EpivIeajXPU9F4vEA */
  states: {
    idle: {
      on: {
        fetch: {
          target: "loading",
        },
      },
      invoke: {
        src: (context, event) => (callback) => {
          callback("fetch");
        },
      },
    },
    loading: {
      on: {
        fetch_success: "success",
        fetch_empty: "empty",
        fetch_error: "error",
      },
      invoke: {
        src: (context, event) => (callback) => {
          fetch("https://jsonplaceholder.typicode.com/todos")
            .then((response) => response.json())
            .then((json) => {
              context.todos = json;
              context.errorMessage = "";

              if (json.length === 0) callback("fetch_empty");
              else callback("fetch_success");
            })
            .catch((err) => {
              context.todos = [];
              context.errorMessage = err.message;
              callback("fetch_error");
            });
        },
      },
    },
    success: {},
    empty: {},
    error: {
      on: {
        refetch: "loading",
      },
    },
  },
  initial: "idle",
});

export default function Home() {
  const [state, send] = useMachine(fetchMachine);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div>
          {state.matches("idle") ||
            (state.matches("loading") && <p>Loading...</p>)}

          {state.matches("success") &&
            state.context.todos.map((todo) => (
              <p key={todo.id}>{todo.title}</p>
            ))}

          {state.matches("error") && (
            <div>
              <p>Error: {state.context.errorMessage}</p>
              <button onClick={() => send("refetch")}>Retry</button>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
